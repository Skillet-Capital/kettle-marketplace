/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, Interface, } from "ethers";
const _abi = [
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "enum Side",
                        name: "side",
                        type: "uint8",
                    },
                    {
                        internalType: "address",
                        name: "maker",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "taker",
                        type: "address",
                    },
                    {
                        components: [
                            {
                                internalType: "enum Criteria",
                                name: "criteria",
                                type: "uint8",
                            },
                            {
                                internalType: "contract IERC721",
                                name: "collection",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "identifier",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct Collateral",
                        name: "collateral",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "contract IERC20",
                                name: "currency",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct MarketOfferTerms",
                        name: "terms",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "recipient",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "rate",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct FeeTerms",
                        name: "fee",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "expiration",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "salt",
                        type: "uint256",
                    },
                ],
                internalType: "struct MarketOffer",
                name: "offer",
                type: "tuple",
            },
        ],
        name: "hashMarketOffer",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "admin",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "redeemer",
                        type: "address",
                    },
                    {
                        internalType: "contract IERC721",
                        name: "collection",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "expiration",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "salt",
                        type: "uint256",
                    },
                ],
                internalType: "struct RedemptionCharge",
                name: "charge",
                type: "tuple",
            },
        ],
        name: "hashRedemptionCharge",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "nonces",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60806040523460195760405161062b61001f823961062b90f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80630457720b146100425780637ecebe001461003d5763cf8ab943036100565761019d565b610150565b610079565b90816101809103126100565790565b600080fd5b90610180828203126100565761007091610047565b90565b9052565b565b34610056576100a461009461008f36600461005b565b6101b9565b6040519182918290815260200190565b0390f35b6001600160a01b031690565b6001600160a01b0381165b0361005657565b90503590610077826100b4565b9060208282031261005657610070916100c6565b610070906100a8906001600160a01b031682565b610070906100e7565b610070906100fb565b9061011790610104565b600052602052604060002090565b610070916008021c81565b906100709154610125565b600061014b61007092600661010d565b610130565b34610056576100a46100946101663660046100d3565b61013b565b908160e09103126100565790565b9190610100838203126100565761007090602061019682866100c6565b940161016b565b34610056576100a46100946101b3366004610179565b906101c2565b610070906102f1565b610070919061043d565b6100709081565b61007090546101cc565b6002111561005657565b634e487b7160e01b600052602160045260246000fd5b6002111561020757565b6101e7565b90610077826101fd565b35610070816101dd565b35610070816100b4565b806100bf565b356100708161022a565b6100709061020c565b6100739061023a565b979593919a9998969492909a61014089019b60008a0161026a919052565b6020890161027791610243565b6001600160a01b031660408801526001600160a01b03166060870152608086015260a085015260c084015260e08301526101008201526101200152565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176102ec57604052565b6102b4565b6103a66102fe60046101d3565b61030783610216565b9061039a602085019461031986610220565b9561032660408301610220565b9161033360608201610501565b61033f60c0830161055d565b61034c61010084016105be565b9161038261037d6103766103706101606103696101408a01610230565b9801610230565b97610220565b600661010d565b6101d3565b9561038c60405190565b9b8c9a60208c019a8b61024c565b908103825203826102ca565b6103b86103b1825190565b9160200190565b2090565b6001600160a01b0381166100bf565b35610070816103bc565b61007390610104565b9694929099989795939161012088019a600089016103fa919052565b6001600160a01b0316602088015260408701610415916103d5565b606086015260808501610427916103d5565b60a084015260c083015260e08201526101000152565b906103a69061044c60056101d3565b61039a61045883610220565b92610465602082016103cb565b9561047260408301610230565b9161047f606082016103cb565b61048b60808301610230565b906104b261037d6104aa60c06104a360a08801610230565b9601610230565b95600661010d565b946104bc60405190565b9a8b9960208b01998a6103de565b6104fd610077946104f36060949897956104e9608086019a6000870152565b6020850190610243565b60408301906103d5565b0152565b6103a661050e60016101d3565b61051783610216565b9061039a61052c60406104a3602088016103cb565b6040519586946020860194856104ca565b9081526060810193926100779290916040916104fd9060208301906103d5565b6103a661056a60036101d3565b916105806020610579836103cb565b9201610230565b9261039a61058d60405190565b94859360208501938461053d565b9081526001600160a01b0390911660208201526060810192916100779160400152565b6103a66105cb60026101d3565b916105da602061057983610220565b9261039a6105e760405190565b94859360208501938461059b56fea2646970667358221220a7134bde262177a682d19b8cfaab15214c8d75e172d9b45ea647bd0f6f769b1764736f6c634300081c0033";
const isSuperArgs = (xs) => xs.length > 1;
export class Signatures__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new Interface(_abi);
    }
    static connect(address, runner) {
        return new Contract(address, _abi, runner);
    }
}
Signatures__factory.bytecode = _bytecode;
Signatures__factory.abi = _abi;
